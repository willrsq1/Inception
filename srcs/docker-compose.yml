version: '3.7'

services:
  nginx:
    container_name: nginx
    depends_on:
      - wordpress
    build:
      context: ./requirements/nginx/
      dockerfile: Dockerfile
    image: nginx
    ports:
      - 443:443
    volumes:
      - wordpress_data:/var/www/html
    restart: always
    networks:
      - network
    env_file:
      - .env

  mariadb:
    container_name: mariadb
    build:
      context: ./requirements/mariadb/
      dockerfile: Dockerfile
    image: mariadb:10.8.2
    env_file: .env
    environment:
             - MYSQL_HOSTNAME=$MYSQL_HOSTNAME
             - MYSQL_DATABASE=$MYSQL_DATABASE
             - MYSQL_USER=$MYSQL_USER
             - MYSQL_PASSWORD=$MYSQL_PASSWORD
             - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
    networks:
      - network
    restart: always
    volumes:
      - mariadb_data:/var/lib/mysql

  wordpress:
    container_name: wordpress
    depends_on:
      - mariadb
    build:
      context: ./requirements/wordpress/
      dockerfile: Dockerfile
    image: wordpress
    restart: always
    env_file:
      - .env
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - network
    
networks:
  network:
    driver: bridge
volumes:
  wordpress_data:
    name: wordpress
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/wruet-su/data/wordpress
  mariadb_data:
    name: mariadb
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/wruet-su/data/mariadb


# docker stop $(docker ps -aq) && docker rm $(docker ps -aq)
# https://www.hostinger.fr/tutoriels/wp-cli


#id DB already exists in mariadbsh

# login instead of localhost
# docker exec -it mariadb mysql -u root -p
# SHOW DATABASES