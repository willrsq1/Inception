version: '3.7'
  
networks:
  network:
    driver: bridge


  
volumes:

  wordpress_data:
    name: wordpress
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/wruet-su/data/wordpress

  mariadb_data:
    name: mariadb
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/wruet-su/data/mariadb

  website_data:
    name: website
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/wruet-su/data/website

  ftp_data:
    name: ftp
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/wruet-su/data/ftp


services:
  nginx:
    container_name: nginx
    depends_on:
      - wordpress
      - website
    build:
      context: ./requirements/nginx/
      dockerfile: Dockerfile
    image: nginx
    ports:
      - 443:443
      - 8080:8080
    volumes:
      - wordpress_data:/var/www/html
      - website_data:/var/www/website
    restart: always
    networks:
      - network
    env_file:
      - .env

  mariadb:
    container_name: mariadb
    build:
      context: ./requirements/mariadb/
      dockerfile: Dockerfile
    image: mariadb
    env_file: .env
    networks:
      - network
    restart: always
    volumes:
      - mariadb_data:/var/lib/mysql

  wordpress:
    container_name: wordpress
    depends_on:
      - mariadb
      - rediscache
    build:
      context: ./requirements/wordpress/
      dockerfile: Dockerfile
    image: wordpress
    restart: always
    env_file:
      - .env
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - network

  website:
    container_name: website
    image: website
    build:
      context: ./requirements/bonus/website/
      dockerfile: Dockerfile
    volumes:
      - website_data:/var/www/website
    restart: always
    networks:
      - network
    env_file:
      - .env

  adminer:
    container_name: adminer
    image: adminer
    build:
      context: ./requirements/bonus/adminer/
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8081:8080
    networks:
      - network

  rediscache:
    container_name: rediscache
    image: redis
    build:
      context: ./requirements/bonus/rediscache/
      dockerfile: Dockerfile
    restart: always
    ports:
      - 6379:6379
    networks:
      - network

  ftp-serv:
    container_name: ftp-serv
    build:
      context: ./requirements/bonus/ftp-serv/
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - nginx
    ports:
      - "21:21"
      - "21000-21010:21000-21010"
    volumes:
      - wordpress_data:/home/william1
    networks:
      - network

  query:
    container_name: query
    build:
      context: ./requirements/bonus/query/
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - mariadb
    ports:
      - 50000:50000
      - 8082:8080
    networks:
      - network


# docker stop $(docker ps -aq) && docker rm $(docker ps -aq)
# https://www.hostinger.fr/tutoriels/wp-cli


#id DB already exists in mariadbsh

# login instead of localhost
# docker exec -it mariadb mysql -u root -p
# SHOW DATABASES